
-- Generated by ORDS REST Data Services 24.4.0.r3451601
-- Schema: WKSP_SOFTPETER  Date: Tue Jun 24 11:22:46 2025 
--
        
DECLARE
  l_roles     OWA.VC_ARR;
  l_modules   OWA.VC_ARR;
  l_patterns  OWA.VC_ARR;

BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'WKSP_SOFTPETER',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'softpeter',
      p_auto_rest_auth      => TRUE);
    
  ORDS.DEFINE_MODULE(
      p_module_name    => 'users',
      p_base_path      => '/users/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'users',
      p_pattern        => 'userlist/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'users',
      p_pattern        => 'userlist/',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'SELECT * FROM USERS WHERE USER_ID = :ID OR :ID IS NULL
');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'GET',
      p_name               => 'user_id',
      p_bind_variable_name => 'user_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'users',
      p_pattern        => 'userlist/',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => 'application/JSON',
      p_comments       => NULL,
      p_source         => 
'BEGIN
  INSERT INTO USERS (
    USER_ID,
    "NAME",
    USERNAME,
    EMAIL,
    STREET,
    CITY,
    ZIPCODE,
    PHONE,
    WEBSITE,
    COMPANY_NAME
  )
  VALUES (
    USER_SEQ.NEXTVAL,
    :NAME,
    :USERNAME,
    :EMAIL,
    :STREET,
    :CITY,
    :ZIPCODE,
    :PHONE,
    :WEBSITE,
    :COMPANY_NAME
  );
--   RETURNING USER_ID INTO new_id;

  :STATUS := 201; -- Created

EXCEPTION
  WHEN OTHERS THEN
    :STATUS := 400;
    :ERRMSG := SQLERRM;
END;

');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'POST',
      p_name               => 'USERNAME',
      p_bind_variable_name => 'USERNAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'POST',
      p_name               => 'WEBSITE',
      p_bind_variable_name => 'WEBSITE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'POST',
      p_name               => 'COMPANY_NAME',
      p_bind_variable_name => 'COMPANY_NAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'POST',
      p_name               => 'NAME',
      p_bind_variable_name => 'NAME',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'POST',
      p_name               => 'EMAIL',
      p_bind_variable_name => 'EMAIL',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'POST',
      p_name               => 'STREET',
      p_bind_variable_name => 'STREET',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'POST',
      p_name               => 'CITY',
      p_bind_variable_name => 'CITY',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'POST',
      p_name               => 'ZIPCODE',
      p_bind_variable_name => 'ZIPCODE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'POST',
      p_name               => 'PHONE',
      p_bind_variable_name => 'PHONE',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'POST',
      p_name               => 'X-APEX-STATUS-CODE',
      p_bind_variable_name => 'STATUS',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/',
      p_method             => 'POST',
      p_name               => 'ERROR-MESSAGE',
      p_bind_variable_name => 'ERRMSG',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'users',
      p_pattern        => 'userlist/:id',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'users',
      p_pattern        => 'userlist/:id',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => 'application/JSON',
      p_comments       => NULL,
      p_source         => 
'BEGIN
IF :id is not null then 
for i in (select * from users where user_id = :id) LOOP
    update users set 
    "NAME" = nvl(:"NAME", i."NAME"),
    USERNAME = nvl(:USERNAME, i.USERNAME),
    EMAIL = nvl(:EMAIL, i.EMAIL),	
    STREET = nvl(:STREET, i.STREET),
    CITY = nvl(:CITY, i.CITY),	
    ZIPCODE = nvl(:ZIPCODE, i.ZIPCODE),
    PHONE = nvl(:PHONE, i.PHONE), 
    WEBSITE	= nvl(:WEBSITE, i.WEBSITE), 
    COMPANY_NAME = nvl(:COMPANY_NAME, i.COMPANY_NAME)
    where user_id = :id;

    END LOOP;
    
   IF SQL%FOUND THEN
   :STATUS := :200;
   ELSE
   :STATUS := :400;
   :ERRMSG := ''USER NOT FOUND!'';
   END IF;
   
   ELSE
    :STATUS := 400;
    :ERRMSG := ''USER NUMBER MUST BE SPECIFIED'';
 END IF;

exception
    when others then
        :status := 400;
       :ERRMSG := :SQLERRM;

END;');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'users',
      p_pattern        => 'userlist/:id',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'Begin
if :id is not null then
delete from users where user_id = :id;

if sql%found then
:status := 200;
else 
:status := 400;
:errmsg := ''User not found'';
end if;

else
:status := 400;
:errmsg := ''User id must be specified'';
end if;

exception 
when others then 
:status := 400;
:errmsg := sqlerrm;
end;
');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'users',
      p_pattern        => 'userlist/:id',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'select * from users 
where user_id = :id');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'users',
      p_pattern            => 'userlist/:id',
      p_method             => 'GET',
      p_name               => 'user_id',
      p_bind_variable_name => 'id',
      p_source_type        => 'URI',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

    
    
  l_roles(1) := 'RESTful Services';
  l_modules(1) := 'users';

  ORDS.DEFINE_PRIVILEGE(
      p_privilege_name => 'user_privilege',
      p_roles          => l_roles,
      p_patterns       => l_patterns,
      p_modules        => l_modules,
      p_label          => 'User Access',
      p_description    => NULL,
      p_comments       => NULL);

  l_roles.DELETE;
  l_modules.DELETE;
  l_patterns.DELETE;
        
COMMIT;

END;